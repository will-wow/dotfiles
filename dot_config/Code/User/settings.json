{
  // Place your settings in this file to overwrite the default settings
  // General Settings
  "workbench.editor.showTabs": false,
  "workbench.editor.labelFormat": "medium",
  "breadcrumbs.enabled": true,
  // Go to the json editor by default.
  "workbench.settings.editor": "json",
  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true
  },
  "htmlhint.options": {
    "doctype-first": false
  },
  "files.associations": {
    "atlas.hcl": "atlas-config",
    "*.m": "matlab",
    "*.ejs": "html"
  },
  "html.format.unformatted": "a-entity",
  "html.format.templating": true,
  "editor.wordWrap": "on",
  "editor.wrappingIndent": "same",
  "files.autoSave": "onFocusChange",
  // Number of editors shown in the Open Editors pane. Set it to 0 to hide the pane.
  "explorer.openEditors.visible": 0,
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.formatOnType": false,
  "editor.formatOnSave": false,
  "files.eol": "\n",
  // Configure glob patterns for excluding files and folders.
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/webpack-bundle.js": true
  },
  // Windows
  // "terminal.integrated.shell.windows": "C:\\Windows\\System32\\wsl.exe",
  "terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe",
  // Vim
  "vim.useSystemClipboard": true,
  "vim.leader": "<space>",
  "vim.enableNeovim": false,
  "vim.easymotion": false,
  "vim.visualstar": true,
  "vim.sneak": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {
    "<C-f>": false,
    "<C-b>": false,
    "<C-d>": true
  },
  "vim.vimrc.enable": false,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "n", "f"],
      "after": [],
      "commands": [
        {
          "command": "workbench.files.action.showActiveFileInExplorer"
        }
      ]
    },
    {
      "before": ["<leader>", "k"],
      "after": [],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "="],
      "after": [],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "/"],
      "after": [],
      "commands": ["workbench.view.search"]
    },
    {
      "before": ["<leader>", "*"],
      "after": [],
      "commands": [
        {
          "command": "workbench.view.search"
        }
      ]
    },
    // use w-c
    // {
    //   "before": ["<leader>", "b", "d"],
    //   "after": [],
    //   "commands": [
    //     {
    //       "command": "workbench.action.closeEditorsInGroup"
    //     }
    //   ]
    // },
    // use w-s
    // {
    //   "before": ["<leader>", "w", "/"],
    //   "after": [],
    //   "commands": [
    //     {
    //       "command": "workbench.action.splitEditorRight"
    //     }
    //   ]
    // },
    // use w-v
    // {
    //   "before": ["<leader>", "w", "-"],
    //   "after": [],
    //   "commands": [
    //     {
    //       "command": "workbench.action.splitEditorDown"
    //     }
    //   ]
    // },
    // Use w-o and splits
    // {
    //   "before": ["<leader>", "tab"],
    //   "after": ["enter"],
    //   "commands": [
    //     {
    //       "command": "workbench.action.openPreviousEditorFromHistory"
    //     },
    //     {
    //       "command": "workbench.action.acceptSelectedQuickOpenItem"
    //     }
    //   ]
    // },
    {
      "before": ["<leader>", ":"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.showCommands"
        }
      ]
    },
    {
      "before": ["<leader>", "f", "e", "d"],
      "after": ["enter"],
      "commands": [
        {
          "command": "workbench.action.openGlobalSettings"
        }
      ]
    },
    {
      "before": ["<leader>", "m", "t", "b"],
      "commands": [
        {
          "command": "extension.runFileSpecs"
        }
      ]
    },
    {
      "before": ["<leader>", "m", "t", "t"],
      "commands": [
        {
          "command": "extension.runSpecLine"
        }
      ]
    },
    {
      "before": ["<leader>", "m", "t", "l"],
      "commands": [
        {
          "command": "extension.runLastSpec"
        }
      ]
    },
    {
      "before": ["<leader>", "p", "a"],
      "commands": [
        {
          "command": "alternate.alternateFile"
        }
      ]
    },
    {
      "before": ["<leader>", "p", "s"],
      "commands": [
        {
          "command": "alternate.alternateFileInSplit"
        }
      ]
    },
    {
      "before": ["z", "="],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["z", "g"],
      "commands": ["cSpell.addWordToUserDictionary"]
    },
    {
      "before": ["z", "w"],
      "commands": ["cSpell.removeWordFromUserDictionary"]
    },
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["g", "s", "s"],
      "commands": [
        {
          "command": "editor.action.transformToSnakecase"
        }
      ]
    },
    {
      "before": ["g", "s", "p"],
      "commands": [
        {
          "command": "editor.action.transformToTitlecase"
        },
        {
          "command": "editor.action.transformToCamelcase"
        }
      ]
    },
    {
      "before": ["g", "s", "c"],
      "commands": [
        {
          "command": "editor.action.transformToCamelcase"
        }
      ]
    },
    // vim-vinegar
    {
      "before": ["-"],
      "commands": [
        {
          "command": "breadcrumbs.toggleToOn",
          "when": "!config.breadcrumbs.enabled"
        },
        {
          "command": "breadcrumbs.focusAndSelect",
          "when": "breadcrumbsPossible"
        }
      ]
    }
  ],
  "ocaml.lintOnSave": true,
  "ocaml.merlinPath": "ocamlmerlin",
  // Lets remapped esc key work on ubuntu.
  "keyboard.dispatch": "keyCode",
  "markdownlint.config": {
    "default": true,
    "MD003": {
      "style": "consistent"
    },
    "MD025": false,
    "MD033": false,
    "MD007": {
      "indent": 2
    },
    "no-hard-tabs": true
  },
  "explorer.autoReveal": false,
  "ruby.lint": {
    "rubocop": false
  },
  "ruby.format": false,
  "ruby.specCommand": "spring rspec",
  "cSpell.enabledLanguageIds": [
    "elixir",
    "erb",
    "javascript",
    "javascriptreact",
    "json",
    "markdown",
    "plaintext",
    "ruby",
    "text",
    "typescript",
    "typescriptreact",
    "yml",
    "mdx",
    "golang",
    "proto3"
  ],
  "cSpell.userWords": [
    "AFRAME",
    "Airtable",
    "Alderaan",
    "Behaviour",
    "Cachex",
    "Confero",
    "Cryptographically",
    "Ethereum",
    "Ethereumex",
    "Geofenced",
    "Juypter",
    "Kalman",
    "Occluder",
    "Occluders",
    "Ockelmann",
    "Orderbook",
    "Postgres",
    "Raycaster",
    "Redex",
    "Rerem",
    "Roadmap",
    "Ropsten",
    "Scaredy",
    "Securitize",
    "Slackbot",
    "Slackbot's",
    "Transcoder",
    "Validators",
    "architecting",
    "autosave",
    "behaviour",
    "Behaviour",
    "bookmarkers",
    "Cachex",
    "camelize",
    "caml",
    "casp",
    "changeset",
    "comparator",
    "concat",
    "cond",
    "Confero",
    "consts",
    "coord",
    "Cryptographically",
    "datetime",
    "defdelegate",
    "defimpl",
    "defmodule",
    "defp",
    "defstruct",
    "dissoc",
    "downcase",
    "dragula",
    "ecto",
    "erlang",
    "Ethereum",
    "Ethereumex",
    "filestack",
    "financings",
    "futura",
    "Geofenced",
    "Healthcheck",
    "idempotency",
    "immersivemess",
    "injectable",
    "Juypter",
    "kablammo",
    "Kalman",
    "leaderboard",
    "mainphase",
    "moduledoc",
    "Occluder",
    "Occluders",
    "Ockelmann",
    "onboarding",
    "openapi",
    "Orderbook",
    "params",
    "parser's",
    "performant",
    "Postgres",
    "preload",
    "Preprocess",
    "preprocessors",
    "promisify",
    "Proveout",
    "Raycaster",
    "Redex",
    "refetch",
    "repo",
    "repos",
    "Rerem",
    "resizer",
    "Roadmap",
    "rootname",
    "Ropsten",
    "Scaredy",
    "Securitize",
    "serializer",
    "sharespost",
    "signup",
    "Slackbot",
    "Slackbot's",
    "slugified",
    "snapshotting",
    "stateful",
    "struct",
    "structs",
    "tablature",
    "termsheet",
    "themself",
    "timestamps",
    "todos",
    "tokenizes",
    "Transcoder",
    "transcoding",
    "truthy",
    "typep",
    "uneditable",
    "unmount",
    "unnest",
    "Validators",
    "Zustand"
  ],
  "wordcounter.languages": ["markdown", "mdx"],
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "editor.fontFamily": "'Fira Code', hack",
  "terminal.integrated.fontFamily": "'MesloLGS NF', 'Fira Code', hack",
  "editor.fontLigatures": true,
  "cmake.configureOnOpen": true,
  "editor.minimap.enabled": false,
  "vim.neovimPath": "",
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "[reason]": {
    "editor.codeLens": false
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[clojure]": {},
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "jest.enableSnapshotUpdateMessages": false,
  "jest.enableCodeLens": true,
  "emojisense.languages": {
    "markdown": true,
    "git-commit": true,
    "plaintext": true,
    "mdx": true
  },
  "python.jediEnabled": false,
  "diffEditor.renderSideBySide": true,
  "workbench.activityBar.visible": true,
  "python.dataScience.sendSelectionToInteractiveWindow": false,
  "python.languageServer": "Pylance",
  "jupyter.askForKernelRestart": false,
  "python.terminal.activateEnvironment": false,
  "workbench.editorAssociations": [
    {
      "viewType": "jupyter.notebook.ipynb",
      "filenamePattern": "*.ipynb"
    }
  ],
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.colorTheme": "Dracula",
  "redhat.telemetry.enabled": true,
  "editor.inlineSuggest.enabled": true,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "go.toolsManagement.autoUpdate": true,
  "cSpell.enableFiletypes": ["go"],
  "editor.linkedEditing": true,
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "jupyter.interactiveWindow.textEditor.executeSelection": false,
  "[proto3]": {
    "editor.defaultFormatter": "bufbuild.vscode-buf"
  },
  "gopls": {
    "ui.semanticTokens": true
  },
  "editor.find.seedSearchStringFromSelection": "selection",
  "search.mode": "reuseEditor",
  "scm.diffDecorationsIgnoreTrimWhitespace": "inherit",
  "jest.autoRevealOutput": "on-exec-error",
  "jest.autoRun": "off",
  "editor.stickyScroll.enabled": true,
  "pgFormatter.commaBreak": true,
  "pgFormatter.spaces": 4,
  "pgFormatter.placeholder": "-- pgfmt: off(?:.*)?-- pgfmt: on"
}
