[
  // # File Exploer works like neotree
  {
    "key": "/",
    "command": "list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "c",
    "command": "list.expand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+c",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    // Make file explorer work more like vim-vinegar
    "key": "-",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "z",
    "command": "list.collapseAll",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "q",
    "command": "workbench.action.closeSidebar",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    // Just open a folder on enter
    "key": "enter",
    "command": "list.expand",
    "when": "filesExplorerFocus && foldersViewVisible && explorerResourceIsFolder && !inputFocus"
  },
  {
    // Close the sidebar after selecting a file in keyboard mode
    "key": "enter",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus",
    "args": {
      "commands": [
        "explorer.openAndPassFocus",
        "workbench.action.toggleSidebarVisibility"
      ]
    }
  },
  {
    // Close the sidebar after selecting a file in a split in keyboard mode
    "key": "v",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus",
    "args": {
      "commands": [
        "explorer.openToSide",
        "workbench.action.toggleSidebarVisibility"
      ]
    }
  },
  // ctrl-hjkl to move through menus
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },

	{{- if ne .chezmoi.os "darwin" }}
  // Remove ctrl+j for neovim, since I use it for opening the panel
  {
    "key": "ctrl+j",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.j && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+j",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.j && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
	// Allow ctrl+p ctrl+p to go to the next file as normal, instead of swapped.
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
	{{- end }}

	{
		"key": "cmd+l",
		"command": "workbench.action.nextPanelView",
		"when": "panelMaximized"
	},
	{
		"key": "cmd+h",
		"command": "workbench.action.previousPanelView",
		"when": "panelMaximized"
	},
	{
		"key": "shift+{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+j",
		"command": "workbench.action.toggleMaximizedPanel"
	},

  // # Other commands

  // Disable this, I don't remember why.
  {
    "key": "ctrl+e",
    "command": ""
  },
  {
    // Toggle inlay hints
    "key": "{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+h",
    "command": "settings.cycle.inlayHints",
    "when": "editorTextFocus"
  }
]
