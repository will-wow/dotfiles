[
  // # Alawys-maximized terminal

  // Close the terminal when focused with ctrl+p/other commands that will open a file, so that it selecting a file doesn't un-maximize the terminal.
  {
    "key": "{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+p",
    "when": "panelFocus",
    "command": "runCommands",
    "args": {
      "commands": ["workbench.action.togglePanel", "workbench.action.quickOpen"]
    }
  },
  {
    "key": "{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+shift+p",
    "when": "panelFocus",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.togglePanel",
        "workbench.action.showCommands"
      ]
    }
  },
  {
    "key": "{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+t",
    "when": "panelFocus",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.togglePanel",
        "workbench.action.showAllSymbols"
      ]
    }
  },
  {
    "key": "{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+shift+f",
    "when": "panelFocus",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.togglePanel",
        "workbench.action.findInFiles"
      ]
    }
  },
  // Max terminal toggle
  {
    // Maximize the terminal when it is not visible
    // Also, close the file explorer for further focus.
    "key": "{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+j",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.closeAuxiliaryBar",
        "workbench.action.toggleMaximizedPanel"
      ]
    },
    "when": "!panelFocus && !terminalFocus"
  },
  {
    // Close the panel when it is visible and/or focused
    "key": "{{- if eq .chezmoi.os "darwin" }}cmd{{- else}}ctrl{{- end }}+j",
    "command": "workbench.action.togglePanel",
    "when": "panelFocus || terminalFocus || activePanel == 'terminal' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.repl' || activePanel == 'workbench.panel.comments'"
  },

  // # File Exploer works like neotree
  {
    "key": "/",
    "command": "list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "c",
    "command": "list.expand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+c",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    // Make file explorer work more like vim-vinegar
    "key": "-",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "z",
    "command": "list.collapseAll",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "q",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    // Just open a folder on enter
    "key": "enter",
    "command": "list.expand",
    "when": "filesExplorerFocus && foldersViewVisible && explorerResourceIsFolder && !inputFocus"
  },
  {
    // Close the sidebar after selecting a file in keyboard mode
    "key": "enter",
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus",
    "args": {
      "commands": [
        "explorer.openAndPassFocus",
        "workbench.action.toggleSidebarVisibility"
      ]
    }
  },
  // ctrl-hjkl to move through menus
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },

  // # Other commands

  // Disable this, I don't remember why.
  {
    "key": "ctrl+e",
    "command": ""
  }
]
